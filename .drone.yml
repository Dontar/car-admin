kind: pipeline
type: kubernetes
name: frontend

trigger:
  branch:
    - master

steps:
  # Build the frontend
  - name: frontend_build
    image: node:lts-alpine
    commands:
      - cd client
      - npm install
      - npm run build

  # Build docker image for the frontend
  # - name: frontend_build_docker
  #   image: alpinelinux/docker-cli:latest
  #   environment:
  #     DOCKER_HOST:
  #       from_secret: docker_host
  #     REGISTRY_USER:
  #       from_secret: registry_user
  #     REGISTRY_PASS:
  #       from_secret: registry_pass
  #   commands:
  #     - cd client
  #     - docker build -t registry.local/car-admin-frontend:latest -f ci/Dockerfile .
  #     - echo "$REGISTRY_PASS" | docker login -u $REGISTRY_USER --password-stdin registry.local
  #     - docker push registry.local/car-admin-frontend:latest
  - name: frontend_build_docker_plugin
    image: plugins/docker
    settings:
      username:
        from_secret: registry_user
      password:
        from_secret: registry_pass
      repo: registry.local
      tags: test.build
      dockerfile: client/ci/Dockerfile
      context: client/
      insecure: true
      registry: registry.local
---
kind: pipeline
type: kubernetes
name: backend

trigger:
  branch:
    - master

steps:
  # Build backend
  - name: backend_build
    image: node:lts-alpine
    commands:
      - cd server
      - npm install
      - npm run build
      - npm install --production

  # Build backend docker image
  - name: backend_build_docker
    image: alpinelinux/docker-cli:latest
    environment:
      DOCKER_HOST:
        from_secret: docker_host
      REGISTRY_USER:
        from_secret: registry_user
      REGISTRY_PASS:
        from_secret: registry_pass
    commands:
      - cd server
      - docker build -t registry.local/car-admin-backend:latest -f ci/Dockerfile .
      - echo "$REGISTRY_PASS" | docker login -u $REGISTRY_USER --password-stdin registry.local
      - docker push registry.local/car-admin-backend:latest
